diff --git a/Configurations/10-main.conf b/Configurations/10-main.conf
index dc6ceb8692..0d958ddcb5 100644
--- a/Configurations/10-main.conf
+++ b/Configurations/10-main.conf
@@ -1099,6 +1099,39 @@ my %targets = (
         shared_cflag     => "-fPIC",
     },
 
+    "qnx-common" => {
+        inherit_from     => [ "BASE_unix" ],
+        CFLAGS           => picker(default => "-Wall",
+                                   debug   => "-O0 -g",
+                                   release => "-O2"),
+        LDFLAGS          => "-static-libgcc",
+        ex_libs          => add("-lsocket"),
+        dso_scheme       => "dlfcn",
+        thread_scheme    => "pthreads",
+        shared_target    => "bsd-gcc-shared",
+        shared_extension => ".so.\$(SHLIB_VERSION_NUMBER)",
+        shared_cflag     => "-fPIC",
+        perlasm_scheme   => 'elf',
+    },
+    "qnx-x86" => {
+        inherit_from     => [ "qnx-common" ],
+        CC               => sub { "i486-pc-nto-qnx" . env("QNX_VERSION") . "-gcc" },
+        cflags           => add("--sysroot=\"" . env("QNX_TARGET") . "/x86\" -march=i686"),
+        asm_arch         => 'x86',
+    },
+    "qnx-arm" => {
+        inherit_from     => [ "qnx-common" ],
+        CC               => sub { "arm-unknown-nto-qnx" . env("QNX_VERSION") . "-gcc" },
+        cflags           => add("--sysroot=\"" . env("QNX_TARGET") . "/armle\" -march=armv6 -mno-unaligned-access"),
+        asm_arch         => 'armv4',
+    },
+    "qnx-armeabi" => {
+        inherit_from     => [ "qnx-common" ],
+        CC               => sub { "arm-unknown-nto-qnx" . env("QNX_VERSION") . "eabi-gcc" },
+        cflags           => add("--sysroot=\"" . env("QNX_TARGET") . "/armle-v7\" -march=armv7-a -mno-unaligned-access"),
+        asm_arch         => 'armv4',
+    },
+
 #### SCO/Caldera targets.
 #
 # Originally we had like unixware-*, unixware-*-pentium, unixware-*-p6, etc.
diff --git a/include/internal/sockets.h b/include/internal/sockets.h
index 1876af8faf..0224a5177b 100644
--- a/include/internal/sockets.h
+++ b/include/internal/sockets.h
@@ -91,7 +91,7 @@ struct servent *PASCAL getservbyname(const char *, const char *);
 #   include <netinet/tcp.h>
 #  endif
 
-#  ifdef OPENSSL_SYS_AIX
+#  if defined(OPENSSL_SYS_AIX) || defined(__QNX__)
 #   include <sys/select.h>
 #  endif
 
diff --git a/util/shlib_wrap.sh.in b/util/shlib_wrap.sh.in
index 675d99a836..e449fa1d6a 100755
--- a/util/shlib_wrap.sh.in
+++ b/util/shlib_wrap.sh.in
@@ -117,8 +117,8 @@ if [ -f "$LIBCRYPTOSO" -a -z "$preload_var" ]; then
 	# it into a script makes it possible to do so on multi-ABI
 	# platforms.
 	case "$SYSNAME" in
-	*BSD)	LD_PRELOAD="$LIBCRYPTOSO:$LIBSSLSO" ;;	# *BSD
-	*)	LD_PRELOAD="$LIBCRYPTOSO $LIBSSLSO" ;;	# SunOS, Linux, ELF HP-UX
+	*BSD|QNX)	LD_PRELOAD="$LIBCRYPTOSO:$LIBSSLSO" ;;	# *BSD, QNX
+	*)		LD_PRELOAD="$LIBCRYPTOSO $LIBSSLSO" ;;	# SunOS, Linux, ELF HP-UX
 	esac
 	_RLD_LIST="$LIBCRYPTOSO:$LIBSSLSO:DEFAULT"	# Tru64, o32 IRIX
 	DYLD_INSERT_LIBRARIES="$LIBCRYPTOSO:$LIBSSLSO"	# MacOS X
